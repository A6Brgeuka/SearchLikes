// Generated by CoffeeScript 1.7.1
'use strict';
FriendsModule.controller('FriendsController', function($scope, $location, $window, $timeout, $state, $stateParams, params, ngTableParams, LocalStorage, Loader, RestModel, currentUser) {
  var tempFriendsArray;
  if (currentUser) {
    $scope.currentUser = currentUser;
  } else {
    $scope.currentUser;
  }
  $scope.resultFriends = false;
  $scope.openTable = false;
  $scope.loading = false;
  tempFriendsArray = [];
  $scope.params = $scope.params || LocalStorage.getItem('params');
  $scope.getStatisticAboutFriends = function() {
    var statisticFriends;
    if (!$scope.resultFriends) {
      $scope.resultFriends = [];
      statisticFriends = RestModel.friendsOnlineOrDelete(null, $scope.friends);
      $scope.getListCountFriends(statisticFriends);
      return $scope.loading = true;
    } else {
      $scope.isResultStatistic = true;
      $scope.openTable = false;
      return $scope.openTableOnline = false;
    }
  };
  $scope.getListCountFriends = function(friends) {
    if (friends.length > 25) {
      tempFriendsArray = friends.splice(0, 25);
      return $timeout(function() {
        return RestModel.getAllCountFriends(tempFriendsArray, $scope.params).then(function(data) {
          angular.forEach(data.response, function(user) {
            return $scope.resultFriends.push(user[0]);
          });
          return $scope.getListCountFriends(friends);
        }, function(error) {
          return console.log(error);
        });
      }, 330);
    } else {
      if (friends.length !== 0) {
        return $timeout(function() {
          return RestModel.getAllCountFriends(friends, $scope.params).then(function(data) {
            angular.forEach(data.response, function(user) {
              return $scope.resultFriends.push(user[0]);
            });
            $scope.loading = false;
            $scope.openTable = false;
            $scope.openTableOnline = false;
            $scope.isResultStatistic = true;
            $scope.resultFriends = $scope.resultFriends.sort($scope.sortable);
            return $scope.resultFriends = Loader.renderBand($scope.resultFriends);
          });
        }, 330);
      } else {
        return console.log('dct');
      }
    }
  };
  $scope.sortable = function(a, b) {
    return b.counters.friends - a.counters.friends;
  };
  $scope.getListFriends = function() {
    $scope.page = 1;
    $scope.friendsOnline = [];
    $scope.openTableOnline = false;
    if (!$scope.friends) {
      $scope.loading = true;
      return RestModel.getFriends($scope.params).then(function(data) {
        $scope.countFriends = data.response.count;
        $scope.loading = false;
        $scope.friends = RestModel.isWorkingFriendsObject(data);
        return $scope.openTable = $scope.friends ? true : false;
      }, function(error) {
        return console.log(error);
      });
    } else {
      return $scope.openTable = true;
    }
  };
  $scope.getListFriendsOnlineOrDelete = function(type) {
    $scope.page = 1;
    $scope.friendsArray = RestModel.friendsOnlineOrDelete(type, $scope.friends);
    $scope.openTable = false;
    return $scope.openTableOnline = $scope.friendsArray ? true : false;
  };
  $scope.signOff = function() {
    LocalStorage.removeAllItem();
    $scope.openAccess = false;
    $scope.openTable = false;
    return $window.location = '/login';
  };
  $scope.more = function(user) {
    $state.transitionTo('user', {
      userId: user.id || user.uid
    });
    return LocalStorage.setItem('page', $scope.page);
  };
  if (LocalStorage.getItem('page')) {
    $scope.getListFriends();
  }
  $scope.page = LocalStorage.getItem('page') ? LocalStorage.getItem('page') : 1;
  return $scope.pageSize = 6;
});

//# sourceMappingURL=FriendsController.map
