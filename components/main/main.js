// Generated by CoffeeScript 1.7.1
$(function() {
  var $adderSpan, $body, $buttonBottom, $buttonTop, $linkArrow, $page, $sections, $window, animSlide, awardNeedLinks, awardSlide, awardSlideCount, awardSlideNum, awardSlideSpeed, awardSlideTime, awardTimeOut, currentButtonTopState, dSlideSpeed, getNextSection, initialize, rotator, rotatorAward, scrollToElement, slideCount, slideNum, sliderResize, text, twoPause, windowHeight;
  $page = $('html,body');
  $body = $('body');
  $window = $(window);
  windowHeight = 0;
  scrollToElement = function(target) {
    var y;
    y = 0;
    if (target && $(target).length) {
      y = $(target).offset().top;
    }
    return $page.stop().animate({
      scrollTop: y
    }, 'slow', 'swing');
  };
  $body.on('click', '#top-menu a , #bottom-menu a', function(e) {
    e.preventDefault();
    return scrollToElement($(this).attr('href'));
  });
  dSlideSpeed = 50;
  $adderSpan = '';
  slideNum = 0;
  slideCount = $('#slider .slide').size();
  animSlide = function(arrow) {
    if (slideNum === arrow) {
      return true;
    }
    $('.slide').eq(slideNum).fadeOut(dSlideSpeed);
    slideNum = arrow;
    $('.slide').eq(slideNum).fadeIn(dSlideSpeed, rotator);
    $('.control-slide.active').removeClass('active');
    $('.control-slide').eq(slideNum).addClass('active');
    return $('.services-provide-block ul li:eq(' + slideNum + ')').addClass('active').siblings().removeClass('active');
  };
  sliderResize = function() {
    var imgH, imgH2, slider;
    slider = $('#slider');
    imgH = $('#slider .slide img').height();
    imgH2 = $('#slider .slide.flip img').height();
    if ($window.width() <= 568) {
      if (imgH <= 0) {
        return slider.css('height', imgH2 + 'px');
      } else {
        return slider.css('height', imgH + 'px');
      }
    }
  };
  rotator = function() {};
  $('.slide').each(function(index) {
    $adderSpan += '<span class = "control-slide">' + index + '</span>';
    return true;
  });
  text = '<div class ="sli-links">' + $adderSpan + '</div>';
  $(text).appendTo('#slider-wrap');
  $('.control-slide:first').addClass('active');
  $('.control-slide').click(function() {
    var goToNum;
    console.log(4);
    goToNum = parseFloat($(this).text());
    return animSlide(goToNum);
  });
  awardSlideSpeed = 600;
  awardTimeOut = 4000;
  awardNeedLinks = true;
  awardSlideNum = 0;
  awardSlideTime = '';
  awardSlideCount = $('.our-awards-slider .award-img').size();
  twoPause = false;
  awardSlide = function(arrow) {
    clearTimeout(awardSlideTime);
    $('.award-img').eq(awardSlideNum).fadeOut(awardSlideSpeed);
    if (arrow === 'next') {
      if (awardSlideNum === (awardSlideCount - 1)) {
        awardSlideNum = 0;
      } else {
        awardSlideNum++;
      }
    } else if (arrow === 'prew') {
      if (awardSlideNum === 0) {
        awardSlideNum = awardSlideCount - 1;
      } else {
        awardSlideNum -= 1;
      }
    } else {
      awardSlideNum = arrow;
    }
    return $('.award-img').eq(awardSlideNum).fadeIn(awardSlideSpeed, rotatorAward);
  };
  rotatorAward = function() {
    if (!twoPause) {
      return awardSlideTime = setTimeout(function() {
        return awardSlide('next');
      }, awardTimeOut);
    }
  };
  if (awardNeedLinks) {
    $linkArrow = $('<span id="prewbutton">&nbsp;</span><span id="nextbutton">&nbsp;</span>').appendTo('.our-awards-slider');
    $('#nextbutton').click(function() {
      return awardSlide('next');
    });
    $('#prewbutton').click(function() {
      return awardSlide('prew');
    });
  }
  $('.our-awards-slider').hover(function() {
    clearTimeout(awardSlideTime);
    return twoPause = true;
  }, function() {
    return twoPause = false;
  });
  rotatorAward();
  initialize = function() {
    var boxText, contentString, ib, image, marker, myMapOptions, myOptions, secheltLoc, theMap;
    secheltLoc = new google.maps.LatLng(54.10506, 45.10594);
    myMapOptions = {
      scrollwheel: false,
      draggable: false,
      zoom: 10,
      center: secheltLoc,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    theMap = new google.maps.Map(document.getElementById('map_canvas'), myMapOptions);
    image = 'img/point.png';
    marker = new google.maps.Marker({
      map: theMap,
      draggable: false,
      position: new google.maps.LatLng(54.10506, 45.10594),
      icon: image,
      visible: true
    });
    boxText = document.createElement('div');
    contentString = '<div id="content-boolean">' + '<h1>LikeSearch</h1>' + '<p>Россия, Саранск</p>' + '</div>';
    myOptions = {
      content: contentString,
      disableAutoPan: false,
      maxWidth: 200,
      pixelOffset: new google.maps.Size(35, -70),
      zIndex: null,
      boxStyle: {
        width: "200px"
      },
      infoBoxClearance: new google.maps.Size(1, 1),
      closeBoxURL: "",
      isHidden: false,
      pane: "floatPane",
      enableEventPropagation: false
    };
    google.maps.event.addListener(marker, 'click', function(e) {
      return ib.open(theMap, this);
    });
    ib = new InfoBox(myOptions);
    return ib.open(theMap, marker);
  };
  google.maps.event.addDomListener(window, 'load', initialize);
  $sections = $('section.section[id]');
  $buttonTop = $('.button-top');
  $buttonBottom = $('.button-bottom');
  currentButtonTopState = null;
  getNextSection = function() {
    var $current, bottomFoldOffset, topFoldOffset;
    topFoldOffset = $window.scrollTop();
    bottomFoldOffset = topFoldOffset + (windowHeight / 2);
    $current = $sections.filter(function() {
      var bottom, top;
      top = $(this).offset().top;
      bottom = top + $(this).height();
      return (top <= bottomFoldOffset && top >= topFoldOffset) || (bottom <= bottomFoldOffset && bottom >= topFoldOffset) || (top <= topFoldOffset && bottom >= bottomFoldOffset);
    });
    return $sections.eq($sections.index($current.last()) + 1);
  };
  $('.section').on('scrollSpy:enter', function() {
    $(this).addClass('current');
    $.fn.fade = function(ops) {
      var $elem, i, l, pause, res;
      $elem = this;
      res = $.extend({
        delay: 400,
        speed: 800
      }, ops);
      i = 0;
      pause = 0;
      l = $elem.length;
      while (i < l) {
        $elem.eq(i).delay(pause).animate({
          'opacity': '1'
        }, res.speed);
        i++;
        pause += res.delay;
      }
      return $elem;
    };
    $('#about-us.current ul.list-of-our-clients li').fade();
    return $('#sb.current .f-left').animate({
      'left': '0'
    }, 1000, 'linear', function() {
      return $('#sb.current .f-right').animate({
        'right': '0'
      }, 1000, 'linear');
    });
  });
  $('.section').on('scrollSpy:exit', function() {});
  $('.section').scrollSpy();
  $('.services-provide-block h3:first-child').animate({
    'opacity': '1'
  }, 1000, 'linear', function() {
    return $('.services-provide-block ul li.item-1').animate({
      'left': '0'
    }, 1000, 'linear', function() {
      return $('.services-provide-block ul li.item-2').animate({
        'left': '0'
      }, 1000, 'linear', function() {
        return $('.services-provide-block ul li.item-3').animate({
          'left': '0'
        }, 1000, 'linear', function() {
          $('a.to-employee-btn').animate({
            'opacity': '1'
          }, 1000, 'linear');
          return $('.services-main-title').animate({
            'top': '0',
            'opacity': '1'
          }, 700, 'linear');
        });
      });
    });
  });
  $('.pseudo-menu').click(function(e) {
    e.preventDefault();
    return $('#top-menu').slideToggle();
  });
  $window.on('scroll', function() {
    var $next, topState, _ref, _ref1;
    topState = (_ref = $(this).scrollTop() > 1) != null ? _ref : {
      'block': 'none'
    };
    $next = getNextSection();
    if (currentButtonTopState !== topState) {
      $buttonTop.parent().css('display', topState);
      currentButtonTopState = topState;
    }
    return $buttonBottom.css('display', (_ref1 = $next.length) != null ? _ref1 : {
      'block': 'none'
    });
  }).on('resize.height', function() {
    var height;
    height = $(this).height();
    if (windowHeight !== height) {
      windowHeight = height;
    }
    return sliderResize();
  }).trigger('resize.height');
  return $body.on('click', '.button-top', function(e) {
    e.preventDefault();
    return scrollToElement();
  }).on('click', '.button-bottom', function(e) {
    var $next;
    e.preventDefault();
    $next = getNextSection();
    if ($next.length) {
      return scrollToElement($next);
    }
  });
});

//# sourceMappingURL=main.map
