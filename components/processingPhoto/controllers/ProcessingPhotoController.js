// Generated by CoffeeScript 1.7.1
'use strict';
SelectedModule.controller('ProcessingPhotoController', function($scope, $stateParams, $location, $timeout, RestModel, params, currentUser, friends) {
  $scope.params = params;
  $scope.window = window;
  $scope.loading = false;
  $scope.isLikes = [];
  $scope.result = false;
  $scope.count = 0;
  $scope.typeUsers = "all";
  $scope.userId = $stateParams.userId;
  $scope.currentUser = currentUser.response[0];
  $scope.countFriends = friends.response.count;
  $scope.userFriends = RestModel.isWorkingFriendsObject(friends);
  $scope.back = function() {
    return $scope.window.history.back();
  };
  $scope.allFriends = angular.copy($scope.userFriends);
  $scope.scaned = function(userFriends) {
    var scaningUsers;
    scaningUsers = [];
    $scope.isLikes = [];
    $scope.result = false;
    $scope.procent = 0;
    angular.forEach(userFriends, function(friend) {
      if ($scope.typeUsers === "'male'" && friend.sex === 2 && !angular.isDefined(friend.deactivated)) {
        scaningUsers.push(friend);
      }
      if ($scope.typeUsers === "'female'" && friend.sex === 1 && !angular.isDefined(friend.deactivated)) {
        return scaningUsers.push(friend);
      }
    });
    if ($scope.typeUsers === "'all'") {
      $scope.searchPhotoAmongUsers(userFriends);
      return $scope.allCountUsers = userFriends.length;
    } else {
      $scope.searchPhotoAmongUsers(scaningUsers);
      return $scope.allCountUsers = scaningUsers.length;
    }
  };
  $scope.searchPhotoAmongUsers = function(userFriends) {
    var checkedUser;
    checkedUser = userFriends.splice(0, 1);
    $scope.procent = 100 - Math.floor(userFriends.length * 100 / $scope.allCountUsers);
    if (checkedUser !== void 0) {
      return $timeout(function() {
        return RestModel.getPhoto(checkedUser[0].id, $scope.params, 1000, "profile").then(function(data) {
          var photos;
          if (angular.isDefined(data.response && data.response.items)) {
            photos = data.response.items;
            if (photos.length === 0) {
              return $scope.searchPhotoAmongUsers(userFriends);
            } else {
              return $scope.getLikesFromsPhotos(checkedUser, userFriends, photos);
            }
          } else {
            return $scope.searchPhotoAmongUsers(userFriends);
          }
        }, function(error) {
          return $scope.searchPhotoAmongUsers(userFriends);
        });
      }, 250);
    } else {
      return console.log('dct');
    }
  };
  $scope.getLikesFromsPhotos = function(checkedUser, userFriends, photos, arrayLikes) {
    var tempPhotos;
    if (arrayLikes == null) {
      arrayLikes = null;
    }
    tempPhotos = '';
    if (photos.length < 25) {
      $scope.arrayLikes = arrayLikes || [];
      return $timeout(function() {
        return RestModel.getLikesExecute($scope.userId, photos, $scope.params).then(function(likes) {
          $scope.arrayLikes.push({
            photo: photos,
            likes: likes
          });
          return $scope.isSearchLikes(checkedUser, userFriends, $scope.arrayLikes);
        }, function(error) {
          return console.log(error);
        });
      }, 250);
    } else {
      $scope.arrayLikes = arrayLikes || [];
      tempPhotos = photos.splice(0, 24);
      return RestModel.getLikesExecute($scope.userId, tempPhotos, $scope.params).then(function(likes) {
        $scope.arrayLikes.push({
          photo: photos,
          likes: likes
        });
        return $scope.getLikesFromsPhotos(checkedUser, userFriends, photos, $scope.arrayLikes);
      });
    }
  };
  $scope.isSearchLikes = function(checkedUser, userFriends, arrayLikes) {
    $scope.isLikes.push({
      user: checkedUser,
      photos: []
    });
    angular.forEach(arrayLikes, function(data) {
      return angular.forEach(data.likes.response, function(item, key) {
        var photoId;
        photoId = parseInt(key.replace(/\D+/g, ""));
        return angular.forEach(item.users, function(user) {
          if (user === parseInt($scope.userId)) {
            return $scope.addPhotoWithLike(checkedUser, photoId, data.photo);
          }
        });
      });
    });
    if ($scope.isLikes.length > 0) {
      $scope.result = true;
    }
    $scope.count = $scope.count + 1;
    if (userFriends.length !== 0) {
      return $scope.searchPhotoAmongUsers(userFriends);
    }
  };
  return $scope.addPhotoWithLike = function(checkedUser, photoId, photos) {
    return angular.forEach(photos, function(photo) {
      if (photo.id === photoId) {
        return $scope.isLikes[$scope.count].photos.push(photo);
      }
    });
  };
});

//# sourceMappingURL=ProcessingPhotoController.map
