// Generated by CoffeeScript 1.7.1
'use strict';
PhotoModule.controller('PhotoController', function($scope, $stateParams, $timeout, $location, RestModel, Notification, LocalStorage, params, user) {
  $scope.window = window;
  $scope.params = params;
  $scope.stateParams = $stateParams;
  $scope.process = false;
  $scope.openOtherSearch = false;
  $scope.user = user.response[0];
  $scope.userId = $scope.user.id;
  $scope.userSearchForId = $scope.stateParams.selectedId;
  $scope.back = function() {
    return $location.path('/user/' + $scope.userId);
  };
  $scope.wall = function() {
    return $location.path('/user/' + $scope.userId + '/selected/' + $scope.userSearchForId + '/wall');
  };
  $scope.increasePhoto = function(photo) {
    $scope.process = true;
    $scope.openBigBlade = true;
    console.log(photo);
    return $scope.image = photo.instance.photo_604;
  };
  $scope.closeBlade = function() {
    $scope.process = false;
    return $scope.openBigBlade = false;
  };
  $scope.returnFormSearch = function() {
    $scope.likePhotos = null;
    $scope.countPhoto = null;
    $scope.typePhoto = null;
    return $scope.openOtherSearch = false;
  };
  if (angular.isDefined($scope.userSearchForId)) {
    RestModel.moreInfo($scope.userSearchForId, $scope.params).then(function(data) {
      return $scope.userSearchFor = data.response[0];
    }, function(error) {
      return console.log(error);
    });
  }
  $scope.changeUser = function(user, userSearchFor) {
    $scope.user = userSearchFor;
    $scope.userSearchFor = user;
    $scope.userId = userSearchFor.id;
    $scope.userSearchForId = user.id;
    return $scope.right = !$scope.right;
  };
  $scope.likesPhoto = function(countPhoto, typePhoto) {
    if (!angular.isDefined(countPhoto)) {
      Notification.show("Выберите количество!");
      return true;
    }
    if (!angular.isDefined(typePhoto)) {
      Notification.show('Выберите тип фото');
      return true;
    }
    $scope.openOtherSearch = true;
    $scope.process = true;
    $scope.photos = [];
    $scope.countPhoto = countPhoto;
    $scope.typePhoto = typePhoto;
    return RestModel.getPhoto($scope.userId, $scope.params, $scope.countPhoto, $scope.typePhoto).then(function(data) {
      console.log(data);
      $scope.photos = data.response.items.length !== 0 ? data.response.items : null;
      if ($scope.photos !== null) {
        return $scope.getLikesFromPhotos();
      } else {
        $scope.likePhotos = [];
        return $scope.process = false;
      }
    }, function(error) {
      return console.log(error);
    });
  };
  $scope.getLikesFromPhotos = function() {
    var index, type;
    $scope.likePhotos = [];
    $scope.countLikes = [];
    $scope.photosLength = $scope.photos.length;
    type = "photo";
    if ($scope.photosLength <= 5) {
      $scope.photos.forEach(function(photo) {
        return RestModel.getLikes($scope.userId, $scope.params, photo.id, type).then(function(data) {
          var listId;
          listId = data.response.items ? data.response.items : null;
          if (listId !== null) {
            listId.forEach(function(id) {
              if (id === parseFloat($scope.userSearchForId)) {
                return $scope.likePhotos.push({
                  instance: photo,
                  countLikes: listId.length
                });
              }
            });
            if ($scope.photos[$scope.photosLength - 1] === photo) {
              return $scope.process = false;
            }
          }
        }, function(error) {
          return console.log(error);
        });
      });
    }
    if ($scope.photosLength > 5) {
      index = 0;
      return $scope.getLikesRecursion($scope.photos[index], index);
    }
  };
  $scope.getLikesRecursion = function(photo, index) {
    $scope.index = index;
    if ($scope.index % 4 === 0 && $scope.index !== $scope.photosLength && $scope.index !== 0) {
      console.log($scope.index);
      $timeout(function() {
        return $scope.getLikes(photo);
      }, 2000);
    }
    if ($scope.index % 4 !== 0 && $scope.index !== $scope.photosLength || $scope.index === 0) {
      $scope.getLikes(photo);
    }
    if (index === $scope.photosLength) {
      console.log($scope.likePhotos);
      $scope.process = false;
      return true;
    }
  };
  $scope.getLikes = function(photo) {
    var type;
    console.log(photo);
    type = "photo";
    return RestModel.getLikes($scope.userId, $scope.params, photo.id, type).then(function(data) {
      var listId;
      $scope.index = $scope.index + 1;
      listId = data.response.items ? data.response.items : null;
      if (listId !== null) {
        listId.forEach(function(id) {
          if (id === parseFloat($scope.userSearchForId)) {
            return $scope.likePhotos.push({
              instance: photo,
              countLikes: listId.length
            });
          }
        });
      }
      return $scope.getLikesRecursion($scope.photos[$scope.index], $scope.index);
    }, function(error) {
      console.log(error);
      if (error.code === 6) {
        return $timeout(function() {
          return $scope.getLikeRecursion(photo, $scope.index);
        }, 3000);
      }
    });
  };
  $scope.page = 1;
  $scope.pageSize = 1;
  $scope.i = 0;
  $scope.isActive = function(index) {
    return $scope.i === index + 1;
  };
  $scope.showPrev = function(photo) {
    $('.next').click();
    return true;
  };
  return $scope.showNext = function(photo) {
    $('.next').click();
    return true;
  };
});

//# sourceMappingURL=PhotoControllers.map
